networks:
  default:
  telegram:
  web:
    external: true

services:
  postgres:
    image: postgres:14.7-alpine@sha256:f56d60bbff317706f8264d631a45526f8f1c1bb7cffaa09f33582cd894cd0ca3
    restart: always
    # These will be used in homeserver.yaml later on
    environment:
      - POSTGRES_DB=synapse
      - POSTGRES_USER=synapse
      - POSTGRES_PASSWORD
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    volumes:
      - /home/aosus/matrix/postgresql:/var/lib/postgresql/data:rw
    networks:
      default:
    deploy:
      mode: global
      update_config:
        parallelism: 0
        order: start-first
        monitor: 4s
        failure_action: rollback
      rollback_config:
        parallelism: 0
        order: stop-first
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3
        window: 120s


  synapse:
    image: ghcr.io/matrix-org/synapse:v1.80.0@sha256:23d09bfbe593a78d9a691bab9bc21d495b1afa15307311e17af76b96ce2fe0aa
    container_name: synapse
    restart: always
    volumes:
      - /home/aosus/matrix/media_store:/data/media_store:rw
    environment:
      - UID=991
      - GID=991
      - SYNAPSE_CONFIG_DIR=config
    configs:
      - source: synapse-homeserver
        target: /config/homeserver.yaml
        uid: "991"
        gid: "991"
      - source: synapse-log-config
        target: /config/log.config
        uid: "991"
        gid: "991"
      - source: mautrix-telegram-appservice
        target: /app-services/telegram.yaml
        uid: "991"
        gid: "991"
      - source: matrix-hookshot-appservice
        target: /app-services/hookshot.yml
        uid: "991"
        gid: "991"
    secrets:
      - source: matrix-signing-key
        target: signing.key
        uid: "991"
        gid: "991"
    healthcheck:
      test: [ "CMD", "curl", "-fSs", "http://localhost:8008/health" ]
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 5s
    networks:
      default:
      web:
    deploy:
      # swarm zero-down time deployment
      update_config:
        delay: 5s
        order: start-first
        monitor: 4s
        failure_action: rollback
      rollback_config:
        parallelism: 0
        order: stop-first
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3
        window: 120s


  synapse-admin:
    container_name: synapse-admin
    image: awesometechnologies/synapse-admin:latest@sha256:3d67b18b8834419badf1d521bb2ceef2951e08810a1cd3b37d7369670b44026c
    ports:
      - "127.0.0.1:8080:80"
    restart: unless-stopped

  mautrix-telegram:
    container_name: mautrix-telegram
    image: dock.mau.dev/mautrix/telegram:v0.13.0@sha256:1060d5ce28a7013452801b6fae5eb93afc8055e6b5cac0b238cc045f8d14409a
    configs:
      - source: mautrix-telegram-appservice
        target: /data/registration.yaml
      - source: mautrix-telegram-config
        target: /data/config.yaml
    networks:
      default:
      telegram:
    deploy:
      # swarm zero-down time deployment
      update_config:
        delay: 5s
        order: start-first
        monitor: 4s
        failure_action: rollback
      rollback_config:
        parallelism: 0
        order: stop-first
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3
        window: 120s


  postgres-telegram:
    image: postgres:14.7-alpine@sha256:f56d60bbff317706f8264d631a45526f8f1c1bb7cffaa09f33582cd894cd0ca3
    restart: always
    environment:
      - POSTGRES_DB=telegram
      - POSTGRES_USER=telegram
      - POSTGRES_PASSWORD=${MATRIX_TELEGRAM_POSTGRES_PASSWORD}
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    volumes:
      - /home/aosus/matrix/telegram/postgresql:/var/lib/postgresql/data:rw
    networks:
      telegram:
    deploy:
      mode: global
      update_config:
        parallelism: 0
        order: start-first
        monitor: 4s
        failure_action: rollback
      rollback_config:
        parallelism: 0
        order: stop-first
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3
        window: 120s

  matrix-hookshot:
    image: halfshot/matrix-hookshot:3.1.1@sha256:bb3b7c924a6e6b2ee014a3a13347dc44ec72e47876464c507b661be493f35ecc
    container_name: matrix-hookshot
    restart: always
    configs:
      - source: matrix-hookshot-appservice
        target: /data/registration.yml
      - source: matrix-hookshot-config
        target: /data/config.yml
    secrets:
      - source: matrix-hookshot-github-private-key
        target: github-key.pem
      - source: matrix-hookshot-pass-key
        target: passkey.pem
    expose:
      - 9993 # Homeserver appservice port
      - 9000 # Webhook port
      - 9002 # widgets port
    networks:
      web:
      default:


  coturn:
    image: coturn/coturn:4.6.1-alpine@sha256:f8b47c4aa643a7b8f35b487edb8b20c4395b2a0263199ec7be3994565f8e10c6
    restart: always
    ports:
      - 3478:3478
      - 3478:3478/udp
      - 48000-49200:48000-49200/udp
    environment:
      - min-port=48000
      - max-port=49200
    volumes:
      - caddy_data:/caddy-data:ro
    configs:
      - source: coturn
        target: /etc/coturn/turnserver.conf

configs:
  synapse-homeserver:
    file: /home/aosus/matrix/homeserver.yaml
  synapse-log-config:
    file: /home/aosus/matrix/log.config
  mautrix-telegram-appservice:
    file: /home/aosus/matrix/mautrix-telegram/app-service-registration.yaml
  mautrix-telegram-config:
    file: /home/aosus/matrix/mautrix-telegram/config.yaml
  matrix-hookshot-appservice:
    file: /home/aosus/matrix/matrix-hookshot/app-service-registration.yaml
  matrix-hookshot-config:
    file: /home/aosus/matrix/matrix-hookshot/config.yaml
  coturn:
    file: /home/aosus/matrix/turnserver.conf
# import secrets from environment variables set by the github runner
secrets:
  matrix-signing-key:
    environment: "MATRIX_SIGNING_KEY"
  matrix-hookshot-github-private-key:
    environment: "MATRIX_HOOKSHOT_GITHUB_PRIVATE_KEY"
  matrix-hookshot-pass-key:
    environment: "MATRIX_HOOKSHOT_PASS_KEY"

volumes:
  caddy_data:
    external: true